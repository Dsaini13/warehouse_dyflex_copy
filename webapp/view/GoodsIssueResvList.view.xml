<mvc:View
controllerName="dyflex.mm.s4cloud.warehouse.controller.GoodsIssueResvList"
	xmlns="sap.m"
	xmlns:ndc="sap.ndc"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:semantic="sap.f.semantic"
	xmlns:footerbar="sap.ushell.ui.footerbar">

	<semantic:SemanticPage
		id="page"
		showFooter="true"
		headerPinnable="false"
		toggleHeaderOnTitleClick="false">

		<semantic:titleHeading>
			<Title text="{i18n>goodsIssueListTitle}" level="H2"/>
		</semantic:titleHeading>

		<semantic:content>
			<Table
				id="idGoodsIssueListTable"
				width="auto"
				mode="MultiSelect"
				selectionChange="onSelectionChange"
				items="{
					path: 'customResvItemSrv>/YY1_Warehouse_ResvItem',
					sorter: [
						{ path: 'MatlCompRequirementDate', descending: false },
						{ path: 'Reservation', descending: false },
						{ path: 'ReservationItem', descending: false }
					],
					filters : [
						{ path : 'OrderCategory', operator : 'EQ', value1 : null },
						{ path : 'OrderCategory', operator : 'NE', value1 : '10' }
					],
					parameters: {
						expand: 'to_Stock'
					}
				}"
				noDataText="{listView>/tableNoDataText}"
				busyIndicatorDelay="{listView>/tableBusyDelay}"
				updateFinished="onUpdateFinished">

				<headerToolbar>
					<OverflowToolbar>
						<Title
							text="{listView>/listTableTitle}"
							level="H3"/>
						<ToolbarSpacer />
						<SearchField
							fieldGroupIds="idSearchFieldGrp"
							search="onSearch">
							<layoutData>
								<OverflowToolbarLayoutData
									maxWidth="150px"
									priority="NeverOverflow"/>
							</layoutData>
						</SearchField>
						<ndc:BarcodeScannerButton
							scanSuccess="onScanSuccess"
							scanFail="onScanError"
							dialogTitle="Barcode Scanner" >
						</ndc:BarcodeScannerButton>
					</OverflowToolbar>
				</headerToolbar>

				<columns>
					<Column>
						<Text text="Reservation" />
					</Column>
					<Column>
						<Text text="Material" />
					</Column>
					<Column minScreenWidth="Tablet" demandPopin="true">
						<Text text="Req Date / Recipient" />
					</Column>
					<Column minScreenWidth="Tablet" demandPopin="true">
						<Text text="Acct. Assign." />
					</Column>
					<Column minScreenWidth="Tablet" demandPopin="true">
						<Text text="Storage Bin" />
					</Column>
					<Column minScreenWidth="Tablet" demandPopin="true" hAlign="End">
						<Text text="Stock On Hand" />
					</Column>
					<Column hAlign="End">
						<Text text="Open Qty" />
					</Column>
				</columns>
				<items>
					<ColumnListItem>
						<cells>
							<ObjectIdentifier
								title="{ path: 'customResvItemSrv>', formatter: '.formatter.resvKeysDisplay' }" />
								
							<ObjectIdentifier
								title="{customResvItemSrv>Product}"
								text="{customResvItemSrv>ProductName}"
								titleActive="true"
								titlePress="onMaterialLinkPress(${customResvItemSrv>Product})" />
								
							<ObjectIdentifier
								title="{ path: 'customResvItemSrv>MatlCompRequirementDate', formatter: '.formatter.dateOutput' }"
								text="{customResvItemSrv>GoodsRecipientName}" />
								
							<ObjectIdentifier
								title="{ path: 'customResvItemSrv>', formatter: '.formatter.resvAccAssignObject' }"
								text="{ path: 'customResvItemSrv>', formatter: '.formatter.resvAccAssignDesc' }" />
								
							<ObjectIdentifier
								title="TEST - {customResvItemSrv>Plant} - {customResvItemSrv>StorageLocation}"
								text="{customResvItemSrv>WarehouseStorageBin}" />
							
							<ObjectNumber
								number="{
									parts: [
										{ path: 'customResvItemSrv>to_Stock/StockOnHand' },
										{ path: 'customResvItemSrv>ResvnItmRequiredQtyInBaseUnit' },
										{ path: 'customResvItemSrv>ResvnItmWithdrawnQtyInBaseUnit' },
										{ path: 'customResvItemSrv>DebitCreditCode' }
									],
									formatter: '.formatter.resvStockValue'
								}"
								unit="{customResvItemSrv>BaseUnit}"
								state="{
									parts: [
										{ path: 'customResvItemSrv>to_Stock/StockOnHand' },
										{ path: 'customResvItemSrv>ResvnItmRequiredQtyInBaseUnit' },
										{ path: 'customResvItemSrv>ResvnItmWithdrawnQtyInBaseUnit' },
										{ path: 'customResvItemSrv>DebitCreditCode' }
									],
									formatter: '.formatter.resvStockStatus'
								}" />
									
							<ObjectNumber
								number="{
									parts: [
										{ path: 'customResvItemSrv>ResvnItmRequiredQtyInBaseUnit' },
										{ path: 'customResvItemSrv>ResvnItmWithdrawnQtyInBaseUnit' }
									],
									formatter: '.formatter.openQuantity'
								}"
								unit="{customResvItemSrv>BaseUnit}" />
						</cells>
					</ColumnListItem>
				</items>
			</Table>
		</semantic:content>
		
		<semantic:titleCustomIconActions>
			<OverflowToolbarButton icon="sap-icon://menu" text="Menu" press="onPressMenu" />
		</semantic:titleCustomIconActions>
		
		<semantic:sendEmailAction>
			<semantic:SendEmailAction press="onShareEmailPress"/>
		</semantic:sendEmailAction>

		<semantic:saveAsTileAction>
			<footerbar:AddBookmarkButton title="{listView>/saveAsTileTitle}" />
		</semantic:saveAsTileAction>
		
		<semantic:footerCustomActions>
			<Button
				text="Pick and Issue{= ${listView>/buttonCountResv} > 0 ? ' (' + ${listView>/buttonCountResv} + ')' : '' }"
				press="onPickIssue"
				busyIndicatorDelay="0"
				enabled="{= ${listView>/buttonCountResv} > 0 }"/>
		</semantic:footerCustomActions>
		
	</semantic:SemanticPage>
	
</mvc:View>